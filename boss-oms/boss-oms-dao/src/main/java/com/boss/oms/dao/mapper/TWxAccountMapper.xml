<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boss.oms.dao.mapper.TWxAccountMapper">
  <resultMap id="BaseResultMap" type="com.boss.oms.dao.model.TWxAccount">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="account_originid" jdbcType="VARCHAR" property="accountOriginid" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="account_token" jdbcType="VARCHAR" property="accountToken" />
    <result column="account_number" jdbcType="VARCHAR" property="accountNumber" />
    <result column="account_type" jdbcType="VARCHAR" property="accountType" />
    <result column="account_email" jdbcType="VARCHAR" property="accountEmail" />
    <result column="account_desc" jdbcType="VARCHAR" property="accountDesc" />
    <result column="account_appid" jdbcType="VARCHAR" property="accountAppid" />
    <result column="account_appsecret" jdbcType="VARCHAR" property="accountAppsecret" />
    <result column="head_img_url" jdbcType="VARCHAR" property="headImgUrl" />
    <result column="qrcode_pic_url" jdbcType="VARCHAR" property="qrcodePicUrl" />
    <result column="server_url" jdbcType="VARCHAR" property="serverUrl" />
    <result column="aes_key" jdbcType="VARCHAR" property="aesKey" />
    <result column="encryption_mode" jdbcType="CHAR" property="encryptionMode" />
    <result column="language" jdbcType="VARCHAR" property="language" />
    <result column="http_domain_nonssl" jdbcType="VARCHAR" property="httpDomainNonssl" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="app_key" jdbcType="VARCHAR" property="appKey" />
    <result column="mch_id" jdbcType="VARCHAR" property="mchId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, account_originid, account_name, account_token, account_number, account_type, 
    account_email, account_desc, account_appid, account_appsecret, head_img_url, qrcode_pic_url, 
    server_url, aes_key, encryption_mode, language, http_domain_nonssl, create_date, 
    status, source, app_key, mch_id
  </sql>
  <select id="selectByExample" parameterType="com.boss.oms.dao.model.TWxAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_wx_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_wx_account
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_wx_account
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.boss.oms.dao.model.TWxAccountExample">
    delete from t_wx_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boss.oms.dao.model.TWxAccount">
    insert into t_wx_account (ID, account_originid, account_name, 
      account_token, account_number, account_type, 
      account_email, account_desc, account_appid, 
      account_appsecret, head_img_url, qrcode_pic_url, 
      server_url, aes_key, encryption_mode, 
      language, http_domain_nonssl, create_date, 
      status, source, app_key, 
      mch_id)
    values (#{id,jdbcType=INTEGER}, #{accountOriginid,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, 
      #{accountToken,jdbcType=VARCHAR}, #{accountNumber,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, 
      #{accountEmail,jdbcType=VARCHAR}, #{accountDesc,jdbcType=VARCHAR}, #{accountAppid,jdbcType=VARCHAR}, 
      #{accountAppsecret,jdbcType=VARCHAR}, #{headImgUrl,jdbcType=VARCHAR}, #{qrcodePicUrl,jdbcType=VARCHAR}, 
      #{serverUrl,jdbcType=VARCHAR}, #{aesKey,jdbcType=VARCHAR}, #{encryptionMode,jdbcType=CHAR}, 
      #{language,jdbcType=VARCHAR}, #{httpDomainNonssl,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR}, #{source,jdbcType=VARCHAR}, #{appKey,jdbcType=VARCHAR}, 
      #{mchId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.boss.oms.dao.model.TWxAccount">
    insert into t_wx_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="accountOriginid != null">
        account_originid,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="accountToken != null">
        account_token,
      </if>
      <if test="accountNumber != null">
        account_number,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
      <if test="accountEmail != null">
        account_email,
      </if>
      <if test="accountDesc != null">
        account_desc,
      </if>
      <if test="accountAppid != null">
        account_appid,
      </if>
      <if test="accountAppsecret != null">
        account_appsecret,
      </if>
      <if test="headImgUrl != null">
        head_img_url,
      </if>
      <if test="qrcodePicUrl != null">
        qrcode_pic_url,
      </if>
      <if test="serverUrl != null">
        server_url,
      </if>
      <if test="aesKey != null">
        aes_key,
      </if>
      <if test="encryptionMode != null">
        encryption_mode,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="httpDomainNonssl != null">
        http_domain_nonssl,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="appKey != null">
        app_key,
      </if>
      <if test="mchId != null">
        mch_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accountOriginid != null">
        #{accountOriginid,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountToken != null">
        #{accountToken,jdbcType=VARCHAR},
      </if>
      <if test="accountNumber != null">
        #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountEmail != null">
        #{accountEmail,jdbcType=VARCHAR},
      </if>
      <if test="accountDesc != null">
        #{accountDesc,jdbcType=VARCHAR},
      </if>
      <if test="accountAppid != null">
        #{accountAppid,jdbcType=VARCHAR},
      </if>
      <if test="accountAppsecret != null">
        #{accountAppsecret,jdbcType=VARCHAR},
      </if>
      <if test="headImgUrl != null">
        #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="qrcodePicUrl != null">
        #{qrcodePicUrl,jdbcType=VARCHAR},
      </if>
      <if test="serverUrl != null">
        #{serverUrl,jdbcType=VARCHAR},
      </if>
      <if test="aesKey != null">
        #{aesKey,jdbcType=VARCHAR},
      </if>
      <if test="encryptionMode != null">
        #{encryptionMode,jdbcType=CHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=VARCHAR},
      </if>
      <if test="httpDomainNonssl != null">
        #{httpDomainNonssl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null">
        #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        #{mchId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boss.oms.dao.model.TWxAccountExample" resultType="java.lang.Long">
    select count(*) from t_wx_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_wx_account
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountOriginid != null">
        account_originid = #{record.accountOriginid,jdbcType=VARCHAR},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountToken != null">
        account_token = #{record.accountToken,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNumber != null">
        account_number = #{record.accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.accountType != null">
        account_type = #{record.accountType,jdbcType=VARCHAR},
      </if>
      <if test="record.accountEmail != null">
        account_email = #{record.accountEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.accountDesc != null">
        account_desc = #{record.accountDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.accountAppid != null">
        account_appid = #{record.accountAppid,jdbcType=VARCHAR},
      </if>
      <if test="record.accountAppsecret != null">
        account_appsecret = #{record.accountAppsecret,jdbcType=VARCHAR},
      </if>
      <if test="record.headImgUrl != null">
        head_img_url = #{record.headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.qrcodePicUrl != null">
        qrcode_pic_url = #{record.qrcodePicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.serverUrl != null">
        server_url = #{record.serverUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.aesKey != null">
        aes_key = #{record.aesKey,jdbcType=VARCHAR},
      </if>
      <if test="record.encryptionMode != null">
        encryption_mode = #{record.encryptionMode,jdbcType=CHAR},
      </if>
      <if test="record.language != null">
        language = #{record.language,jdbcType=VARCHAR},
      </if>
      <if test="record.httpDomainNonssl != null">
        http_domain_nonssl = #{record.httpDomainNonssl,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.appKey != null">
        app_key = #{record.appKey,jdbcType=VARCHAR},
      </if>
      <if test="record.mchId != null">
        mch_id = #{record.mchId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_wx_account
    set ID = #{record.id,jdbcType=INTEGER},
      account_originid = #{record.accountOriginid,jdbcType=VARCHAR},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account_token = #{record.accountToken,jdbcType=VARCHAR},
      account_number = #{record.accountNumber,jdbcType=VARCHAR},
      account_type = #{record.accountType,jdbcType=VARCHAR},
      account_email = #{record.accountEmail,jdbcType=VARCHAR},
      account_desc = #{record.accountDesc,jdbcType=VARCHAR},
      account_appid = #{record.accountAppid,jdbcType=VARCHAR},
      account_appsecret = #{record.accountAppsecret,jdbcType=VARCHAR},
      head_img_url = #{record.headImgUrl,jdbcType=VARCHAR},
      qrcode_pic_url = #{record.qrcodePicUrl,jdbcType=VARCHAR},
      server_url = #{record.serverUrl,jdbcType=VARCHAR},
      aes_key = #{record.aesKey,jdbcType=VARCHAR},
      encryption_mode = #{record.encryptionMode,jdbcType=CHAR},
      language = #{record.language,jdbcType=VARCHAR},
      http_domain_nonssl = #{record.httpDomainNonssl,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=CHAR},
      source = #{record.source,jdbcType=VARCHAR},
      app_key = #{record.appKey,jdbcType=VARCHAR},
      mch_id = #{record.mchId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boss.oms.dao.model.TWxAccount">
    update t_wx_account
    <set>
      <if test="accountOriginid != null">
        account_originid = #{accountOriginid,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountToken != null">
        account_token = #{accountToken,jdbcType=VARCHAR},
      </if>
      <if test="accountNumber != null">
        account_number = #{accountNumber,jdbcType=VARCHAR},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=VARCHAR},
      </if>
      <if test="accountEmail != null">
        account_email = #{accountEmail,jdbcType=VARCHAR},
      </if>
      <if test="accountDesc != null">
        account_desc = #{accountDesc,jdbcType=VARCHAR},
      </if>
      <if test="accountAppid != null">
        account_appid = #{accountAppid,jdbcType=VARCHAR},
      </if>
      <if test="accountAppsecret != null">
        account_appsecret = #{accountAppsecret,jdbcType=VARCHAR},
      </if>
      <if test="headImgUrl != null">
        head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      </if>
      <if test="qrcodePicUrl != null">
        qrcode_pic_url = #{qrcodePicUrl,jdbcType=VARCHAR},
      </if>
      <if test="serverUrl != null">
        server_url = #{serverUrl,jdbcType=VARCHAR},
      </if>
      <if test="aesKey != null">
        aes_key = #{aesKey,jdbcType=VARCHAR},
      </if>
      <if test="encryptionMode != null">
        encryption_mode = #{encryptionMode,jdbcType=CHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=VARCHAR},
      </if>
      <if test="httpDomainNonssl != null">
        http_domain_nonssl = #{httpDomainNonssl,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="appKey != null">
        app_key = #{appKey,jdbcType=VARCHAR},
      </if>
      <if test="mchId != null">
        mch_id = #{mchId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boss.oms.dao.model.TWxAccount">
    update t_wx_account
    set account_originid = #{accountOriginid,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      account_token = #{accountToken,jdbcType=VARCHAR},
      account_number = #{accountNumber,jdbcType=VARCHAR},
      account_type = #{accountType,jdbcType=VARCHAR},
      account_email = #{accountEmail,jdbcType=VARCHAR},
      account_desc = #{accountDesc,jdbcType=VARCHAR},
      account_appid = #{accountAppid,jdbcType=VARCHAR},
      account_appsecret = #{accountAppsecret,jdbcType=VARCHAR},
      head_img_url = #{headImgUrl,jdbcType=VARCHAR},
      qrcode_pic_url = #{qrcodePicUrl,jdbcType=VARCHAR},
      server_url = #{serverUrl,jdbcType=VARCHAR},
      aes_key = #{aesKey,jdbcType=VARCHAR},
      encryption_mode = #{encryptionMode,jdbcType=CHAR},
      language = #{language,jdbcType=VARCHAR},
      http_domain_nonssl = #{httpDomainNonssl,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      source = #{source,jdbcType=VARCHAR},
      app_key = #{appKey,jdbcType=VARCHAR},
      mch_id = #{mchId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>