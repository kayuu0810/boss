<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boss.oms.dao.mapper.TSalPolicyBeneficiaryMapper">
  <resultMap id="BaseResultMap" type="com.boss.oms.dao.model.TSalPolicyBeneficiary">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="POLICY_ID" jdbcType="BIGINT" property="policyId" />
    <result column="INSURED_RELATION" jdbcType="VARCHAR" property="insuredRelation" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="SEX" jdbcType="CHAR" property="sex" />
    <result column="CERTIFICATE_TYPE" jdbcType="VARCHAR" property="certificateType" />
    <result column="CERTIFICATE_NO" jdbcType="VARCHAR" property="certificateNo" />
    <result column="NATIONALITY" jdbcType="VARCHAR" property="nationality" />
    <result column="VALID_START_DATE" jdbcType="DATE" property="validStartDate" />
    <result column="VALID_END_DATE" jdbcType="DATE" property="validEndDate" />
    <result column="BIRTHDATE" jdbcType="DATE" property="birthdate" />
    <result column="BENEFIT_RATIO" jdbcType="DECIMAL" property="benefitRatio" />
    <result column="BENEFIT_ORDER" jdbcType="INTEGER" property="benefitOrder" />
    <result column="INSURED_ID" jdbcType="CHAR" property="insuredId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, POLICY_ID, INSURED_RELATION, NAME, SEX, CERTIFICATE_TYPE, CERTIFICATE_NO, NATIONALITY, 
    VALID_START_DATE, VALID_END_DATE, BIRTHDATE, BENEFIT_RATIO, BENEFIT_ORDER, INSURED_ID
  </sql>
  <select id="selectByExample" parameterType="com.boss.oms.dao.model.TSalPolicyBeneficiaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sal_policy_beneficiary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sal_policy_beneficiary
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_sal_policy_beneficiary
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.boss.oms.dao.model.TSalPolicyBeneficiaryExample">
    delete from t_sal_policy_beneficiary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boss.oms.dao.model.TSalPolicyBeneficiary">
    insert into t_sal_policy_beneficiary (ID, POLICY_ID, INSURED_RELATION, 
      NAME, SEX, CERTIFICATE_TYPE, 
      CERTIFICATE_NO, NATIONALITY, VALID_START_DATE, 
      VALID_END_DATE, BIRTHDATE, BENEFIT_RATIO, 
      BENEFIT_ORDER, INSURED_ID)
    values (#{id,jdbcType=BIGINT}, #{policyId,jdbcType=BIGINT}, #{insuredRelation,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{certificateType,jdbcType=VARCHAR}, 
      #{certificateNo,jdbcType=VARCHAR}, #{nationality,jdbcType=VARCHAR}, #{validStartDate,jdbcType=DATE}, 
      #{validEndDate,jdbcType=DATE}, #{birthdate,jdbcType=DATE}, #{benefitRatio,jdbcType=DECIMAL}, 
      #{benefitOrder,jdbcType=INTEGER}, #{insuredId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.boss.oms.dao.model.TSalPolicyBeneficiary">
    insert into t_sal_policy_beneficiary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="policyId != null">
        POLICY_ID,
      </if>
      <if test="insuredRelation != null">
        INSURED_RELATION,
      </if>
      <if test="name != null">
        NAME,
      </if>
      <if test="sex != null">
        SEX,
      </if>
      <if test="certificateType != null">
        CERTIFICATE_TYPE,
      </if>
      <if test="certificateNo != null">
        CERTIFICATE_NO,
      </if>
      <if test="nationality != null">
        NATIONALITY,
      </if>
      <if test="validStartDate != null">
        VALID_START_DATE,
      </if>
      <if test="validEndDate != null">
        VALID_END_DATE,
      </if>
      <if test="birthdate != null">
        BIRTHDATE,
      </if>
      <if test="benefitRatio != null">
        BENEFIT_RATIO,
      </if>
      <if test="benefitOrder != null">
        BENEFIT_ORDER,
      </if>
      <if test="insuredId != null">
        INSURED_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="policyId != null">
        #{policyId,jdbcType=BIGINT},
      </if>
      <if test="insuredRelation != null">
        #{insuredRelation,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="certificateType != null">
        #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateNo != null">
        #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null">
        #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="validStartDate != null">
        #{validStartDate,jdbcType=DATE},
      </if>
      <if test="validEndDate != null">
        #{validEndDate,jdbcType=DATE},
      </if>
      <if test="birthdate != null">
        #{birthdate,jdbcType=DATE},
      </if>
      <if test="benefitRatio != null">
        #{benefitRatio,jdbcType=DECIMAL},
      </if>
      <if test="benefitOrder != null">
        #{benefitOrder,jdbcType=INTEGER},
      </if>
      <if test="insuredId != null">
        #{insuredId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boss.oms.dao.model.TSalPolicyBeneficiaryExample" resultType="java.lang.Long">
    select count(*) from t_sal_policy_beneficiary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_sal_policy_beneficiary
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.policyId != null">
        POLICY_ID = #{record.policyId,jdbcType=BIGINT},
      </if>
      <if test="record.insuredRelation != null">
        INSURED_RELATION = #{record.insuredRelation,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        SEX = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.certificateType != null">
        CERTIFICATE_TYPE = #{record.certificateType,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNo != null">
        CERTIFICATE_NO = #{record.certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="record.nationality != null">
        NATIONALITY = #{record.nationality,jdbcType=VARCHAR},
      </if>
      <if test="record.validStartDate != null">
        VALID_START_DATE = #{record.validStartDate,jdbcType=DATE},
      </if>
      <if test="record.validEndDate != null">
        VALID_END_DATE = #{record.validEndDate,jdbcType=DATE},
      </if>
      <if test="record.birthdate != null">
        BIRTHDATE = #{record.birthdate,jdbcType=DATE},
      </if>
      <if test="record.benefitRatio != null">
        BENEFIT_RATIO = #{record.benefitRatio,jdbcType=DECIMAL},
      </if>
      <if test="record.benefitOrder != null">
        BENEFIT_ORDER = #{record.benefitOrder,jdbcType=INTEGER},
      </if>
      <if test="record.insuredId != null">
        INSURED_ID = #{record.insuredId,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_sal_policy_beneficiary
    set ID = #{record.id,jdbcType=BIGINT},
      POLICY_ID = #{record.policyId,jdbcType=BIGINT},
      INSURED_RELATION = #{record.insuredRelation,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      SEX = #{record.sex,jdbcType=CHAR},
      CERTIFICATE_TYPE = #{record.certificateType,jdbcType=VARCHAR},
      CERTIFICATE_NO = #{record.certificateNo,jdbcType=VARCHAR},
      NATIONALITY = #{record.nationality,jdbcType=VARCHAR},
      VALID_START_DATE = #{record.validStartDate,jdbcType=DATE},
      VALID_END_DATE = #{record.validEndDate,jdbcType=DATE},
      BIRTHDATE = #{record.birthdate,jdbcType=DATE},
      BENEFIT_RATIO = #{record.benefitRatio,jdbcType=DECIMAL},
      BENEFIT_ORDER = #{record.benefitOrder,jdbcType=INTEGER},
      INSURED_ID = #{record.insuredId,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boss.oms.dao.model.TSalPolicyBeneficiary">
    update t_sal_policy_beneficiary
    <set>
      <if test="policyId != null">
        POLICY_ID = #{policyId,jdbcType=BIGINT},
      </if>
      <if test="insuredRelation != null">
        INSURED_RELATION = #{insuredRelation,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        SEX = #{sex,jdbcType=CHAR},
      </if>
      <if test="certificateType != null">
        CERTIFICATE_TYPE = #{certificateType,jdbcType=VARCHAR},
      </if>
      <if test="certificateNo != null">
        CERTIFICATE_NO = #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="nationality != null">
        NATIONALITY = #{nationality,jdbcType=VARCHAR},
      </if>
      <if test="validStartDate != null">
        VALID_START_DATE = #{validStartDate,jdbcType=DATE},
      </if>
      <if test="validEndDate != null">
        VALID_END_DATE = #{validEndDate,jdbcType=DATE},
      </if>
      <if test="birthdate != null">
        BIRTHDATE = #{birthdate,jdbcType=DATE},
      </if>
      <if test="benefitRatio != null">
        BENEFIT_RATIO = #{benefitRatio,jdbcType=DECIMAL},
      </if>
      <if test="benefitOrder != null">
        BENEFIT_ORDER = #{benefitOrder,jdbcType=INTEGER},
      </if>
      <if test="insuredId != null">
        INSURED_ID = #{insuredId,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boss.oms.dao.model.TSalPolicyBeneficiary">
    update t_sal_policy_beneficiary
    set POLICY_ID = #{policyId,jdbcType=BIGINT},
      INSURED_RELATION = #{insuredRelation,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      SEX = #{sex,jdbcType=CHAR},
      CERTIFICATE_TYPE = #{certificateType,jdbcType=VARCHAR},
      CERTIFICATE_NO = #{certificateNo,jdbcType=VARCHAR},
      NATIONALITY = #{nationality,jdbcType=VARCHAR},
      VALID_START_DATE = #{validStartDate,jdbcType=DATE},
      VALID_END_DATE = #{validEndDate,jdbcType=DATE},
      BIRTHDATE = #{birthdate,jdbcType=DATE},
      BENEFIT_RATIO = #{benefitRatio,jdbcType=DECIMAL},
      BENEFIT_ORDER = #{benefitOrder,jdbcType=INTEGER},
      INSURED_ID = #{insuredId,jdbcType=CHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>