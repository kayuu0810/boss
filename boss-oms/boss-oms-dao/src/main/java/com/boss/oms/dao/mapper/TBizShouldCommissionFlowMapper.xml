<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boss.oms.dao.mapper.TBizShouldCommissionFlowMapper">
  <resultMap id="BaseResultMap" type="com.boss.oms.dao.model.TBizShouldCommissionFlow">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="ORDER_ID" jdbcType="BIGINT" property="orderId" />
    <result column="POLICY_ID" jdbcType="BIGINT" property="policyId" />
    <result column="TAX_LEVEL_ID" jdbcType="BIGINT" property="taxLevelId" />
    <result column="POLICY_TYPE" jdbcType="CHAR" property="policyType" />
    <result column="ACCEPT_DATE" jdbcType="TIMESTAMP" property="acceptDate" />
    <result column="CANCEL_DATE" jdbcType="TIMESTAMP" property="cancelDate" />
    <result column="PREMIUM" jdbcType="DECIMAL" property="premium" />
    <result column="AGENT_ID" jdbcType="BIGINT" property="agentId" />
    <result column="PROMITIONAL_RATE" jdbcType="DECIMAL" property="promitionalRate" />
    <result column="PROMITIONAL_TYPE" jdbcType="CHAR" property="promitionalType" />
    <result column="Promotion_Status" jdbcType="CHAR" property="promotionStatus" />
    <result column="PAYABLE_AMOUNT" jdbcType="DECIMAL" property="payableAmount" />
    <result column="TAX_LEVEL" jdbcType="CHAR" property="taxLevel" />
    <result column="DEDUCTION_AMOUNT" jdbcType="DECIMAL" property="deductionAmount" />
    <result column="RRPEATEDTAX_COST" jdbcType="DECIMAL" property="rrpeatedtaxCost" />
    <result column="PAID_AMOUNT" jdbcType="DECIMAL" property="paidAmount" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="UPDATE_DATE" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, ORDER_ID, POLICY_ID, TAX_LEVEL_ID, POLICY_TYPE, ACCEPT_DATE, CANCEL_DATE, PREMIUM, 
    AGENT_ID, PROMITIONAL_RATE, PROMITIONAL_TYPE, Promotion_Status, PAYABLE_AMOUNT, TAX_LEVEL, 
    DEDUCTION_AMOUNT, RRPEATEDTAX_COST, PAID_AMOUNT, CREATE_DATE, UPDATE_DATE
  </sql>
  <select id="selectByExample" parameterType="com.boss.oms.dao.model.TBizShouldCommissionFlowExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_biz_should_commission_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_biz_should_commission_flow
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_biz_should_commission_flow
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.boss.oms.dao.model.TBizShouldCommissionFlowExample">
    delete from t_biz_should_commission_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.boss.oms.dao.model.TBizShouldCommissionFlow">
    insert into t_biz_should_commission_flow (ID, ORDER_ID, POLICY_ID, 
      TAX_LEVEL_ID, POLICY_TYPE, ACCEPT_DATE, 
      CANCEL_DATE, PREMIUM, AGENT_ID, 
      PROMITIONAL_RATE, PROMITIONAL_TYPE, Promotion_Status, 
      PAYABLE_AMOUNT, TAX_LEVEL, DEDUCTION_AMOUNT, 
      RRPEATEDTAX_COST, PAID_AMOUNT, CREATE_DATE, 
      UPDATE_DATE)
    values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{policyId,jdbcType=BIGINT}, 
      #{taxLevelId,jdbcType=BIGINT}, #{policyType,jdbcType=CHAR}, #{acceptDate,jdbcType=TIMESTAMP}, 
      #{cancelDate,jdbcType=TIMESTAMP}, #{premium,jdbcType=DECIMAL}, #{agentId,jdbcType=BIGINT}, 
      #{promitionalRate,jdbcType=DECIMAL}, #{promitionalType,jdbcType=CHAR}, #{promotionStatus,jdbcType=CHAR}, 
      #{payableAmount,jdbcType=DECIMAL}, #{taxLevel,jdbcType=CHAR}, #{deductionAmount,jdbcType=DECIMAL}, 
      #{rrpeatedtaxCost,jdbcType=DECIMAL}, #{paidAmount,jdbcType=DECIMAL}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.boss.oms.dao.model.TBizShouldCommissionFlow">
    insert into t_biz_should_commission_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="orderId != null">
        ORDER_ID,
      </if>
      <if test="policyId != null">
        POLICY_ID,
      </if>
      <if test="taxLevelId != null">
        TAX_LEVEL_ID,
      </if>
      <if test="policyType != null">
        POLICY_TYPE,
      </if>
      <if test="acceptDate != null">
        ACCEPT_DATE,
      </if>
      <if test="cancelDate != null">
        CANCEL_DATE,
      </if>
      <if test="premium != null">
        PREMIUM,
      </if>
      <if test="agentId != null">
        AGENT_ID,
      </if>
      <if test="promitionalRate != null">
        PROMITIONAL_RATE,
      </if>
      <if test="promitionalType != null">
        PROMITIONAL_TYPE,
      </if>
      <if test="promotionStatus != null">
        Promotion_Status,
      </if>
      <if test="payableAmount != null">
        PAYABLE_AMOUNT,
      </if>
      <if test="taxLevel != null">
        TAX_LEVEL,
      </if>
      <if test="deductionAmount != null">
        DEDUCTION_AMOUNT,
      </if>
      <if test="rrpeatedtaxCost != null">
        RRPEATEDTAX_COST,
      </if>
      <if test="paidAmount != null">
        PAID_AMOUNT,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="updateDate != null">
        UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="policyId != null">
        #{policyId,jdbcType=BIGINT},
      </if>
      <if test="taxLevelId != null">
        #{taxLevelId,jdbcType=BIGINT},
      </if>
      <if test="policyType != null">
        #{policyType,jdbcType=CHAR},
      </if>
      <if test="acceptDate != null">
        #{acceptDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelDate != null">
        #{cancelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="premium != null">
        #{premium,jdbcType=DECIMAL},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=BIGINT},
      </if>
      <if test="promitionalRate != null">
        #{promitionalRate,jdbcType=DECIMAL},
      </if>
      <if test="promitionalType != null">
        #{promitionalType,jdbcType=CHAR},
      </if>
      <if test="promotionStatus != null">
        #{promotionStatus,jdbcType=CHAR},
      </if>
      <if test="payableAmount != null">
        #{payableAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxLevel != null">
        #{taxLevel,jdbcType=CHAR},
      </if>
      <if test="deductionAmount != null">
        #{deductionAmount,jdbcType=DECIMAL},
      </if>
      <if test="rrpeatedtaxCost != null">
        #{rrpeatedtaxCost,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null">
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.boss.oms.dao.model.TBizShouldCommissionFlowExample" resultType="java.lang.Long">
    select count(*) from t_biz_should_commission_flow
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_biz_should_commission_flow
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.policyId != null">
        POLICY_ID = #{record.policyId,jdbcType=BIGINT},
      </if>
      <if test="record.taxLevelId != null">
        TAX_LEVEL_ID = #{record.taxLevelId,jdbcType=BIGINT},
      </if>
      <if test="record.policyType != null">
        POLICY_TYPE = #{record.policyType,jdbcType=CHAR},
      </if>
      <if test="record.acceptDate != null">
        ACCEPT_DATE = #{record.acceptDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cancelDate != null">
        CANCEL_DATE = #{record.cancelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.premium != null">
        PREMIUM = #{record.premium,jdbcType=DECIMAL},
      </if>
      <if test="record.agentId != null">
        AGENT_ID = #{record.agentId,jdbcType=BIGINT},
      </if>
      <if test="record.promitionalRate != null">
        PROMITIONAL_RATE = #{record.promitionalRate,jdbcType=DECIMAL},
      </if>
      <if test="record.promitionalType != null">
        PROMITIONAL_TYPE = #{record.promitionalType,jdbcType=CHAR},
      </if>
      <if test="record.promotionStatus != null">
        Promotion_Status = #{record.promotionStatus,jdbcType=CHAR},
      </if>
      <if test="record.payableAmount != null">
        PAYABLE_AMOUNT = #{record.payableAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.taxLevel != null">
        TAX_LEVEL = #{record.taxLevel,jdbcType=CHAR},
      </if>
      <if test="record.deductionAmount != null">
        DEDUCTION_AMOUNT = #{record.deductionAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.rrpeatedtaxCost != null">
        RRPEATEDTAX_COST = #{record.rrpeatedtaxCost,jdbcType=DECIMAL},
      </if>
      <if test="record.paidAmount != null">
        PAID_AMOUNT = #{record.paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.createDate != null">
        CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_biz_should_commission_flow
    set ID = #{record.id,jdbcType=BIGINT},
      ORDER_ID = #{record.orderId,jdbcType=BIGINT},
      POLICY_ID = #{record.policyId,jdbcType=BIGINT},
      TAX_LEVEL_ID = #{record.taxLevelId,jdbcType=BIGINT},
      POLICY_TYPE = #{record.policyType,jdbcType=CHAR},
      ACCEPT_DATE = #{record.acceptDate,jdbcType=TIMESTAMP},
      CANCEL_DATE = #{record.cancelDate,jdbcType=TIMESTAMP},
      PREMIUM = #{record.premium,jdbcType=DECIMAL},
      AGENT_ID = #{record.agentId,jdbcType=BIGINT},
      PROMITIONAL_RATE = #{record.promitionalRate,jdbcType=DECIMAL},
      PROMITIONAL_TYPE = #{record.promitionalType,jdbcType=CHAR},
      Promotion_Status = #{record.promotionStatus,jdbcType=CHAR},
      PAYABLE_AMOUNT = #{record.payableAmount,jdbcType=DECIMAL},
      TAX_LEVEL = #{record.taxLevel,jdbcType=CHAR},
      DEDUCTION_AMOUNT = #{record.deductionAmount,jdbcType=DECIMAL},
      RRPEATEDTAX_COST = #{record.rrpeatedtaxCost,jdbcType=DECIMAL},
      PAID_AMOUNT = #{record.paidAmount,jdbcType=DECIMAL},
      CREATE_DATE = #{record.createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.boss.oms.dao.model.TBizShouldCommissionFlow">
    update t_biz_should_commission_flow
    <set>
      <if test="orderId != null">
        ORDER_ID = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="policyId != null">
        POLICY_ID = #{policyId,jdbcType=BIGINT},
      </if>
      <if test="taxLevelId != null">
        TAX_LEVEL_ID = #{taxLevelId,jdbcType=BIGINT},
      </if>
      <if test="policyType != null">
        POLICY_TYPE = #{policyType,jdbcType=CHAR},
      </if>
      <if test="acceptDate != null">
        ACCEPT_DATE = #{acceptDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelDate != null">
        CANCEL_DATE = #{cancelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="premium != null">
        PREMIUM = #{premium,jdbcType=DECIMAL},
      </if>
      <if test="agentId != null">
        AGENT_ID = #{agentId,jdbcType=BIGINT},
      </if>
      <if test="promitionalRate != null">
        PROMITIONAL_RATE = #{promitionalRate,jdbcType=DECIMAL},
      </if>
      <if test="promitionalType != null">
        PROMITIONAL_TYPE = #{promitionalType,jdbcType=CHAR},
      </if>
      <if test="promotionStatus != null">
        Promotion_Status = #{promotionStatus,jdbcType=CHAR},
      </if>
      <if test="payableAmount != null">
        PAYABLE_AMOUNT = #{payableAmount,jdbcType=DECIMAL},
      </if>
      <if test="taxLevel != null">
        TAX_LEVEL = #{taxLevel,jdbcType=CHAR},
      </if>
      <if test="deductionAmount != null">
        DEDUCTION_AMOUNT = #{deductionAmount,jdbcType=DECIMAL},
      </if>
      <if test="rrpeatedtaxCost != null">
        RRPEATEDTAX_COST = #{rrpeatedtaxCost,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null">
        PAID_AMOUNT = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boss.oms.dao.model.TBizShouldCommissionFlow">
    update t_biz_should_commission_flow
    set ORDER_ID = #{orderId,jdbcType=BIGINT},
      POLICY_ID = #{policyId,jdbcType=BIGINT},
      TAX_LEVEL_ID = #{taxLevelId,jdbcType=BIGINT},
      POLICY_TYPE = #{policyType,jdbcType=CHAR},
      ACCEPT_DATE = #{acceptDate,jdbcType=TIMESTAMP},
      CANCEL_DATE = #{cancelDate,jdbcType=TIMESTAMP},
      PREMIUM = #{premium,jdbcType=DECIMAL},
      AGENT_ID = #{agentId,jdbcType=BIGINT},
      PROMITIONAL_RATE = #{promitionalRate,jdbcType=DECIMAL},
      PROMITIONAL_TYPE = #{promitionalType,jdbcType=CHAR},
      Promotion_Status = #{promotionStatus,jdbcType=CHAR},
      PAYABLE_AMOUNT = #{payableAmount,jdbcType=DECIMAL},
      TAX_LEVEL = #{taxLevel,jdbcType=CHAR},
      DEDUCTION_AMOUNT = #{deductionAmount,jdbcType=DECIMAL},
      RRPEATEDTAX_COST = #{rrpeatedtaxCost,jdbcType=DECIMAL},
      PAID_AMOUNT = #{paidAmount,jdbcType=DECIMAL},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      UPDATE_DATE = #{updateDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>